"use strict";

// Required modules.
const fsPromises = require("fs/promises");

// Constants.
const NAME_DB = "Scheduling";
const NAME_COLLECTION = "Reminders";
const FILE_PATH_COLLECTION = "./reminders.json";

async function loadJsonFile() {
	let fileHandle;
	try {
		fileHandle = await fsPromises.open(FILE_PATH_COLLECTION); // Default: open file for reading. Can throw an exception. TODO: check.
		let fileString = await fileHandle.readFile("utf8"); // Can throw an exception. TODO: check.
    	return JSON.parse(fileString); // Can throw an exception. TODO: check.
	} catch (err) {
		console.error(err.message); // TODO.
	} finally {
		await fileHandle?.close();
	}
}

async function main() {
	use(NAME_DB); // Use a specific database. If it doesn't already exist, it's created.
	db[NAME_COLLECTION].drop(); // Delete a specific collection. If it doesn't exist, nothing happens.
	// Create a specific collection. If it already exists, an error occurs (that's why drop() has to
	// be called first).
	db.createCollection(NAME_COLLECTION);
	const dictionary = await loadJsonFile();
	db[NAME_COLLECTION].insertMany(dictionary.entries);
}

main();